class Queue {
  constructor() {
    this.items = [];
  }

  // Menambahkan elemen ke dalam queue
  enqueue(element) {
    this.items.push(element);
  }

  // Menghapus elemen pertama dari queue
  dequeue() {
    if (this.isEmpty()) {
      return "Queue is empty";
    }
    return this.items.shift();
  }

  // Melihat elemen pertama tanpa menghapusnya
  front() {
    if (this.isEmpty()) {
      return "Queue is empty";
    }
    return this.items[0];
  }

  // Mengecek apakah queue kosong
  isEmpty() {
    return this.items.length === 0;
  }

  // Melihat semua elemen dalam queue
  printQueue() {
    return this.items.toString();
  }
}

// Contoh penggunaan
const queue = new Queue();
queue.enqueue(10);
queue.enqueue(20);
queue.enqueue(30);
console.log(queue.printQueue()); // Output: 10,20,30
console.log(queue.dequeue());   // Output: 10
console.log(queue.front());     // Output: 20
